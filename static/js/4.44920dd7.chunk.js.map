{"version":3,"sources":["servise/apiFeanch.js","pages/Pages.module.css","components/MoviesCast/MoviesCast.module.css","components/MoviesCast/MoviesCast.js","components/MoviesReview/MoviesReview.js","pages/MovieDetailsPage.js"],"names":["API_KEY","BASE_URL","getTrendingFilm","page","axios","get","getSearchMovie","query","getMovieById","id","getMovieCredits","getMoviesReview","module","exports","MoviesCast","useState","casts","setCasts","movieId","useParams","useEffect","then","data","cast","className","styles","list","map","item","src","profile_path","alt","name","MoviesReview","reviews","setReviews","results","length","review","author","content","MovieDetailsPage","match","useRouteMatch","location","useLocation","film","setFilm","card","poster_path","title","cardText","release_date","overview","genres","genre","navLink","link","activeClassName","activeLink","exact","to","pathname","url","state","from","path"],"mappings":"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","file":"static/js/4.44920dd7.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst API_KEY = \"5a9486e7363af1432b87b7a7303a7852\";\nconst BASE_URL = \"https://api.themoviedb.org\";\n\nconst getTrendingFilm = (page) =>\n  axios.get(`${BASE_URL}/3/trending/movie/day?api_key=${API_KEY}&page=${page}`);\n\nconst getSearchMovie = (query, page) =>\n  axios.get(\n    `${BASE_URL}/3/search/movie?api_key=${API_KEY}&language=en-US&include_adult=false&page=${page}&query=${query}`\n  );\n\nconst getMovieById = (id) =>\n  axios.get(`${BASE_URL}/3/movie/${id}?api_key=${API_KEY}&language=en-US`);\n\nconst getMovieCredits = (id) =>\n  axios.get(\n    `${BASE_URL}/3/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n\nconst getMoviesReview = (id) =>\n  axios.get(\n    `${BASE_URL}/3/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n\nexport {\n  getTrendingFilm,\n  getSearchMovie,\n  getMovieById,\n  getMovieCredits,\n  getMoviesReview,\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Pages_list__c0cXf\",\"item\":\"Pages_item__2iiUf\",\"textTitle\":\"Pages_textTitle__i0izP\",\"loadButton\":\"Pages_loadButton__IFBxo\",\"button\":\"Pages_button__3sraT\",\"form\":\"Pages_form__1sF8K\",\"input\":\"Pages_input__cXlwA\",\"card\":\"Pages_card__263Lf\",\"cardText\":\"Pages_cardText__3shYU\",\"navLink\":\"Pages_navLink__22gwD\",\"link\":\"Pages_link__FDF9R\",\"activeLink\":\"Pages_activeLink__347yE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"MoviesCast_list__1b1dC\",\"item\":\"MoviesCast_item__tDth5\"};","import React, { useState, useEffect } from \"react\";\n\nimport { useParams } from \"react-router\";\n\nimport { getMovieCredits } from \"../../servise/apiFeanch\";\nimport styles from \"./MoviesCast.module.css\";\nconst MoviesCast = () => {\n  const [casts, setCasts] = useState([]);\n  const { movieId } = useParams();\n  useEffect(() => {\n    getMovieCredits(movieId).then(({ data }) => setCasts([...data.cast]));\n  }, [movieId]);\n  return (\n    <>\n      <ul className={styles.list}>\n        {casts.map((cast) => (\n          <li key={cast.id} className={styles.item}>\n            {\n              <>\n                <img\n                  src={`https://image.tmdb.org/t/p/w200/${cast.profile_path}`}\n                  alt={cast.name}\n                />\n                <p>{cast.name}</p>\n              </>\n            }\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nexport default MoviesCast;\n","import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router\";\n\nimport { getMoviesReview } from \"../../servise/apiFeanch\";\n\nconst MoviesReview = () => {\n  const [reviews, setReviews] = useState([]);\n  const { movieId } = useParams();\n  useEffect(() => {\n    getMoviesReview(movieId).then(({ data }) => setReviews([...data.results]));\n  }, [movieId]);\n\n  return (\n    <>\n      {reviews.length ? (\n        <ul>\n          {reviews.map((review) => (\n            <li key={review.author}>\n              <p>{review.author}</p>\n              <p>{review.content}</p>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>Not found</p>\n      )}\n    </>\n  );\n};\n\nexport default MoviesReview;\n","import { Route } from \"react-router\";\nimport { NavLink, useRouteMatch, useLocation } from \"react-router-dom\";\n\nimport { useState, useEffect } from \"react\";\n\nimport { useParams } from \"react-router\";\n\nimport { getMovieById } from \"../servise/apiFeanch\";\nimport MoviesCast from \"../components/MoviesCast\";\nimport MoviesReview from \"../components/MoviesReview\";\nimport styles from \"./Pages.module.css\";\n\nconst MovieDetailsPage = () => {\n  const match = useRouteMatch();\n  const location = useLocation();\n  const [film, setFilm] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    getMovieById(movieId).then(({ data }) => setFilm(data));\n  }, [movieId]);\n\n  return (\n    <>\n      {film && (\n        <>\n          <div className={styles.card}>\n            <img\n              src={`https://image.tmdb.org/t/p/w500/${film.poster_path}`}\n              alt={film.title}\n            />\n            <div className={styles.cardText}>\n              <h3>\n                <span>{film.title}</span>\n                <span>{film.release_date}</span>\n              </h3>\n              <h3>Overview</h3>\n              <p>{film.overview}</p>\n              <h3>Genres:</h3>\n              <ul>\n                {film.genres.map((genre) => {\n                  return <li key={genre.id}>{genre.name}</li>;\n                })}\n              </ul>\n            </div>\n          </div>\n          <div className={styles.navLink}>\n            <NavLink\n              className={styles.link}\n              activeClassName={styles.activeLink}\n              exact\n              to={{ pathname: `${match.url}/cast`, state: { from: location } }}\n            >\n              Cast\n            </NavLink>\n            <NavLink\n              className={styles.link}\n              activeClassName={styles.activeLink}\n              exact\n              to={{\n                pathname: `${match.url}/review`,\n                state: { from: location },\n              }}\n            >\n              Review\n            </NavLink>\n          </div>\n\n          <Route path={`${match.path}/cast`}>\n            <MoviesCast />\n          </Route>\n          <Route path={`${match.path}/review`}>\n            <MoviesReview />\n          </Route>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default MovieDetailsPage;\n"],"sourceRoot":""}